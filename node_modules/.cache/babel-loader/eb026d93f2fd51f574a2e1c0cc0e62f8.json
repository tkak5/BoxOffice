{"ast":null,"code":"import _classCallCheck from\"/Users/tkak/sample/react2/BoxOffice/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tkak/sample/react2/BoxOffice/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/tkak/sample/react2/BoxOffice/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/tkak/sample/react2/BoxOffice/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/tkak/sample/react2/BoxOffice/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/tkak/sample/react2/BoxOffice/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Sort from'./sort';var Ajax=/*#__PURE__*/function(_React$Component){_inherits(Ajax,_React$Component);function Ajax(props){var _this;_classCallCheck(this,Ajax);_this=_possibleConstructorReturn(this,_getPrototypeOf(Ajax).call(this,props));_this.state={year:\"2019\",error:null,isLoaded:false,movies:[]};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(Ajax,[{key:\"handleChange\",value:function handleChange(event){this.setState({year:event.target.value});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(\"https://tkak5.github.io/movie/year_list.json\").then(function(response){if(response.ok){response.json().then(function(json){return _this2.setState({isLoaded:true,movies:json});});}else{_this2.setState({isLoaded:true,error:response});}});}},{key:\"renderSort\",value:function renderSort(){if(this.state.error){return React.createElement(\"div\",null,\"Error: \",this.state.error.message);}else if(!this.state.isLoaded){return React.createElement(\"div\",null,\"Loading...\");}else{return React.createElement(Sort,{movies:this.state.movies});}}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,this.renderSort());}}]);return Ajax;}(React.Component);export default Ajax;","map":{"version":3,"sources":["/Users/tkak/sample/react2/BoxOffice/src/components/ajax.js"],"names":["React","Sort","Ajax","props","state","year","error","isLoaded","movies","handleChange","bind","event","setState","target","value","fetch","then","response","ok","json","message","renderSort","Component"],"mappings":"kuBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,GAGMC,CAAAA,I,0EACJ,cAAYC,KAAZ,CAAmB,sCACjB,sEAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,IAAI,CAAE,MADK,CAEXC,KAAK,CAAE,IAFI,CAGXC,QAAQ,CAAE,KAHC,CAIXC,MAAM,CAAE,EAJG,CAAb,CAMA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CARiB,aASlB,C,mEAEYC,K,CAAO,CAClB,KAAKC,QAAL,CAAc,CAACP,IAAI,CAAEM,KAAK,CAACE,MAAN,CAAaC,KAApB,CAAd,EACD,C,6DAEmB,iBAClBC,KAAK,CAAC,8CAAD,CAAL,CACEC,IADF,CACO,SAACC,QAAD,CAAc,CAAC,GAAGA,QAAQ,CAACC,EAAZ,CAAgB,CAClCD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,SAACG,IAAD,QACnB,CAAA,MAAI,CAACP,QAAL,CAAc,CACZL,QAAQ,CAAE,IADE,CAEZC,MAAM,CAAEW,IAFI,CAAd,CADmB,EAArB,EAMD,CAPmB,IAOb,CACL,MAAI,CAACP,QAAL,CAAc,CACZL,QAAQ,CAAE,IADE,CAEZD,KAAK,CAAEW,QAFK,CAAd,EAID,CACF,CAdD,EAeD,C,+CAEY,CACX,GAAI,KAAKb,KAAL,CAAWE,KAAf,CAAsB,CACpB,MAAO,0CAAa,KAAKF,KAAL,CAAWE,KAAX,CAAiBc,OAA9B,CAAP,CACD,CAFD,IAEO,IAAI,CAAC,KAAKhB,KAAL,CAAWG,QAAhB,CAA0B,CAC/B,MAAO,6CAAP,CACD,CAFM,IAEA,CACL,MACE,qBAAC,IAAD,EACE,MAAM,CAAE,KAAKH,KAAL,CAAWI,MADrB,EADF,CAKD,CACF,C,uCAEQ,CACP,MACE,gCACG,KAAKa,UAAL,EADH,CADF,CAKD,C,kBAtDgBrB,KAAK,CAACsB,S,EAyDzB,cAAepB,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport Sort from './sort';\n\n\nclass Ajax extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: \"2019\",\n      error: null,\n      isLoaded: false,\n      movies: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({year: event.target.value});\n  }\n\n  componentDidMount() {\n    fetch(\"https://tkak5.github.io/movie/year_list.json\"\n    ).then((response) => {if(response.ok) {\n        response.json().then((json) =>\n          this.setState({\n            isLoaded: true,\n            movies: json,\n          })\n        )\n      } else {\n        this.setState({\n          isLoaded: true,\n          error: response\n        });\n      }\n    });\n  }\n\n  renderSort() {\n    if (this.state.error) {\n      return <div>Error: {this.state.error.message}</div>\n    } else if (!this.state.isLoaded) {\n      return <div>Loading...</div>\n    } else {\n      return (\n        <Sort\n          movies={this.state.movies}\n        />\n      );\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        {this.renderSort()}\n      </div>\n    );\n  }\n}\n\nexport default Ajax;\n"]},"metadata":{},"sourceType":"module"}