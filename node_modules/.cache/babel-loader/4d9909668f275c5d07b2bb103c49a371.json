{"ast":null,"code":"var _jsxFileName = \"/Users/tkak/sample/react2/my-app/src/sort.js\";\nimport React, { useState, useMemo } from 'react';\nimport Movie from './index';\nimport Button from './button';\n\nconst Sort = props => {\n  const [sort, setSort] = useState([]);\n  const sortedMovies = useMemo(() => {\n    let _sortedMovies = props.movies;\n\n    if (sort.key) {\n      _sortedMovies = _sortedMovies.sort((a, b) => {\n        a = a[sort.key];\n        b = b[sort.key];\n\n        if (a === b) {\n          return 0;\n        }\n\n        if (a > b) {\n          return 1 * sort.order;\n        }\n\n        if (a < b) {\n          return -1 * sort.order;\n        }\n      });\n    }\n\n    return _sortedMovies;\n  }, [sort]);\n\n  const handleSort = key => {\n    if (sort.key === key) {\n      setSort({ ...sort,\n        order: -sort.order\n      });\n    } else {\n      setSort({\n        key: key,\n        order: 1\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Button, {\n    button: \"income\",\n    sort: sort,\n    handleSort: handleSort,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Movie, {\n    movies: props.movies,\n    max: props.max,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};\n\nexport default Sort;","map":{"version":3,"sources":["/Users/tkak/sample/react2/my-app/src/sort.js"],"names":["React","useState","useMemo","Movie","Button","Sort","props","sort","setSort","sortedMovies","_sortedMovies","movies","key","a","b","order","handleSort","max"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMQ,YAAY,GAAGP,OAAO,CAAC,MAAM;AACjC,QAAIQ,aAAa,GAAGJ,KAAK,CAACK,MAA1B;;AACA,QAAIJ,IAAI,CAACK,GAAT,EAAc;AACZF,MAAAA,aAAa,GAAGA,aAAa,CAACH,IAAd,CAAmB,CAACM,CAAD,EAAIC,CAAJ,KAAU;AAC3CD,QAAAA,CAAC,GAAGA,CAAC,CAACN,IAAI,CAACK,GAAN,CAAL;AACAE,QAAAA,CAAC,GAAGA,CAAC,CAACP,IAAI,CAACK,GAAN,CAAL;;AAEA,YAAGC,CAAC,KAAKC,CAAT,EAAY;AACV,iBAAO,CAAP;AACD;;AACD,YAAGD,CAAC,GAAGC,CAAP,EAAU;AACR,iBAAO,IAAIP,IAAI,CAACQ,KAAhB;AACD;;AACD,YAAGF,CAAC,GAAGC,CAAP,EAAU;AACR,iBAAO,CAAC,CAAD,GAAKP,IAAI,CAACQ,KAAjB;AACD;AACF,OAbe,CAAhB;AAcD;;AACD,WAAOL,aAAP;AACD,GAnB2B,EAmBzB,CAACH,IAAD,CAnByB,CAA5B;;AAqBA,QAAMS,UAAU,GAAIJ,GAAD,IAAS;AAC1B,QAAIL,IAAI,CAACK,GAAL,KAAaA,GAAjB,EAAsB;AACpBJ,MAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUQ,QAAAA,KAAK,EAAE,CAACR,IAAI,CAACQ;AAAvB,OAAD,CAAP;AACD,KAFD,MAEO;AACLP,MAAAA,OAAO,CAAC;AACNI,QAAAA,GAAG,EAAEA,GADC;AAENG,QAAAA,KAAK,EAAE;AAFD,OAAD,CAAP;AAID;AACF,GATD;;AAWC,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE,QADV;AAEE,IAAA,IAAI,EAAER,IAFR;AAGE,IAAA,UAAU,EAAES,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAEV,KAAK,CAACK,MADhB;AAEE,IAAA,GAAG,EAAEL,KAAK,CAACW,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADD;AAkBF,CArDD;;AAuDA,eAAeZ,IAAf","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport Movie from './index';\nimport Button from './button';\n\n\nconst Sort = (props) => {\n  const [sort, setSort] = useState([])\n\n  const sortedMovies = useMemo(() => {\n    let _sortedMovies = props.movies;\n    if (sort.key) {\n      _sortedMovies = _sortedMovies.sort((a, b) => {\n        a = a[sort.key];\n        b = b[sort.key];\n\n        if(a === b) {\n          return 0;\n        }\n        if(a > b) {\n          return 1 * sort.order;\n        }\n        if(a < b) {\n          return -1 * sort.order;\n        }\n      });\n    }\n    return _sortedMovies;\n  }, [sort]);\n\n  const handleSort = (key) => {\n    if (sort.key === key) {\n      setSort({...sort, order: -sort.order });\n    } else {\n      setSort({\n        key: key,\n        order: 1\n      })\n    }\n  };\n\n   return(\n    <div>\n      <div>\n        <Button\n          button={\"income\"}\n          sort={sort}\n          handleSort={handleSort}\n        />\n      </div>\n      <div>\n        <Movie\n          movies={props.movies}\n          max={props.max}\n        />\n      </div>\n    </div>\n\n   );\n}\n\nexport default Sort;\n\n"]},"metadata":{},"sourceType":"module"}