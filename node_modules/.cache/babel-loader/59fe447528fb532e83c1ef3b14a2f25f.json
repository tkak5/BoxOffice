{"ast":null,"code":"var _jsxFileName = \"/Users/tkak/sample/react2/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //import styled from 'styled-components';\n//import './index.css';\n\nvar styleGenerator = ({\n  size\n}) => ({\n  width: size,\n  color: \"hotpink\"\n});\n\nclass Movie extends React.Component {\n  render() {\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.props.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: styleGenerator(Number(this.props.money)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.props.money))));\n  }\n\n}\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://tkak5.github.io/movie/data/2019.json\").then(response => {\n      if (response.ok) {\n        response.json().then(json => this.setState({\n          isLoaded: true,\n          movies: json[\"movies\"],\n          max: json[\"max\"]\n        }));\n      } else {\n        this.setState({\n          isLoaded: true,\n          error: response\n        });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    var movie_list = this.state.movies;\n\n    for (var i; i < movie_list.length; i++) {\n      var movie_color = document.getElementById(movie_list[i]['title']);\n      movie_color.style.color = 'hotpink';\n    }\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      movies\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, movies.map(movie => React.createElement(Movie, {\n        name: movie.title,\n        money: movie.worldwide,\n        ratio: movie.wprldwide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })\n      /*\n      <li>\n        <div className=\"container\">\n          <div className=\"left_box\">\n            {movie.title}\n          </div>\n          <div className=\"right_box\">\n            <div className=\"bar\" style={styleGenerator({movie.worldwide})}>\n              {movie.worldwide}\n            </div>\n          </div>\n        </div>\n      </li>\n      */\n      //name={movie.title}\n      //money={movie.worldwide}\n      //ratio={Number(movie.worldwide / max)}\n      ));\n    }\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(MyComponent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tkak/sample/react2/my-app/src/index.js"],"names":["React","ReactDOM","styleGenerator","size","width","color","Movie","Component","render","props","name","Number","money","MyComponent","constructor","state","error","isLoaded","movies","componentDidMount","fetch","then","response","ok","json","setState","max","componentDidUpdate","movie_list","i","length","movie_color","document","getElementById","style","message","map","movie","title","worldwide","wprldwide"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n//import styled from 'styled-components';\n//import './index.css';\n\nvar styleGenerator = ({size}) => ({\n  width: size,\n  color: \"hotpink\",\n});\n\nclass Movie extends React.Component {\n  render() {\n    return (\n      <li>\n        <div>\n          <div>\n            {this.props.name}\n          </div>\n          <div>\n            <div style={styleGenerator(Number(this.props.money))}>\n              {this.props.money}\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://tkak5.github.io/movie/data/2019.json\"\n    ).then((response) => {if(response.ok) {\n        response.json().then((json) =>\n          this.setState({\n            isLoaded: true,\n            movies: json[\"movies\"],\n            max: json[\"max\"]\n          })\n        )\n      } else {\n        this.setState({\n          isLoaded: true,\n          error: response\n        });\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    var movie_list = this.state.movies;\n    for (var i; i < movie_list.length; i++) {\n      var movie_color = document.getElementById(movie_list[i]['title']);\n      movie_color.style.color = 'hotpink';\n    }\n  }\n\n  render() {\n    const { error, isLoaded, movies} = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {movies.map(movie => (\n            <Movie\n              name={movie.title}\n              money={movie.worldwide}\n              ratio={movie.wprldwide}\n            />\n            /*\n            <li>\n              <div className=\"container\">\n                <div className=\"left_box\">\n                  {movie.title}\n                </div>\n                <div className=\"right_box\">\n                  <div className=\"bar\" style={styleGenerator({movie.worldwide})}>\n                    {movie.worldwide}\n                  </div>\n                </div>\n              </div>\n            </li>\n            */\n              //name={movie.title}\n              //money={movie.worldwide}\n              //ratio={Number(movie.worldwide / max)}\n            ))\n          }\n        </ul>\n      );\n    }\n  }\n}\n// ========================================\n\nReactDOM.render(\n  <MyComponent />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}