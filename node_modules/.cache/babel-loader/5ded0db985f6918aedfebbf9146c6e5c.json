{"ast":null,"code":"var _jsxFileName = \"/Users/tkak/sample/react2/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //import styled from 'styled-components';\n\nimport './index.css';\n\nconst styleGenerator = size => ({\n  width: size\n});\n\nclass Movie extends React.Component {\n  render() {\n    if (this.props.error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Error: \", this.props.error.message);\n    } else if (!this.props.isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return (\n        /*\n        <ul>\n          {this.props.titles[\"movies\"].map(movie => (\n            <li>\n              <div className=\"wrapper\">\n                <div className=\"left_box\">\n                  {movie.title}\n                </div>\n                <div className=\"center_box\">\n                  $ {movie.worldwide.toLocaleString()}\n                </div>\n                <div className=\"right_box\">\n                  <div className=\"bar\" style={styleGenerator(movie.worldwide/this.props.titles[\"max\"] * 500)}>\n                  </div>\n                </div>\n              </div>\n            </li>\n          ))\n          }\n        </ul>\n        */\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, this.props.titles)\n      );\n    }\n  }\n\n}\n\nclass Ajax extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: \"2018\",\n      error: null,\n      isLoaded: false,\n      movies: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      year: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"https://tkak5.github.io/movie/year_list.json\").then(response => {\n      if (response.ok) {\n        response.json().then(json => {\n          this.setState({\n            isLoaded: true,\n            movies: json\n          });\n        });\n      } else {\n        this.setState({\n          isLoaded: true,\n          error: response\n        });\n      }\n    });\n  }\n\n  renderMovie() {\n    return React.createElement(Movie, {\n      error: this.state.error,\n      isLoaded: this.state.isLoaded,\n      titles: this.state.movies[this.state.year],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      value: this.state.year,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"2019\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"2019\"), React.createElement(\"option\", {\n      value: \"2018\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"2018\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.renderMovie()));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Ajax, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tkak/sample/react2/my-app/src/index.js"],"names":["React","ReactDOM","styleGenerator","size","width","Movie","Component","render","props","error","message","isLoaded","titles","Ajax","constructor","state","year","movies","handleChange","bind","event","setState","target","value","componentDidMount","fetch","then","response","ok","json","renderMovie","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n//import styled from 'styled-components';\nimport './index.css';\n\nconst styleGenerator = (size) => ({\n  width: size\n});\n\nclass Movie extends React.Component {\n  render() {\n    if (this.props.error) {\n      return <div>Error: {this.props.error.message}</div>;\n    } else if (!this.props.isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        /*\n        <ul>\n          {this.props.titles[\"movies\"].map(movie => (\n            <li>\n              <div className=\"wrapper\">\n                <div className=\"left_box\">\n                  {movie.title}\n                </div>\n                <div className=\"center_box\">\n                  $ {movie.worldwide.toLocaleString()}\n                </div>\n                <div className=\"right_box\">\n                  <div className=\"bar\" style={styleGenerator(movie.worldwide/this.props.titles[\"max\"] * 500)}>\n                  </div>\n                </div>\n              </div>\n            </li>\n          ))\n          }\n        </ul>\n        */\n        <div>\n          {this.props.titles}\n        </div>\n        );\n    }\n  }\n}\n\n\n\nclass Ajax extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      year: \"2018\",\n      error: null,\n      isLoaded: false,\n      movies: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({year: event.target.value});\n  }\n\n  componentDidMount() {\n    fetch(\"https://tkak5.github.io/movie/year_list.json\"\n      ).then((response) => {if(response.ok) {\n          response.json().then((json) => {\n            this.setState({\n              isLoaded: true,\n              movies: json\n            });\n          });\n      } else {\n        this.setState({\n          isLoaded: true,\n          error: response\n          });\n        }\n    });\n  }\n  \n  renderMovie() {\n    return (\n      <Movie\n        error={this.state.error}\n        isLoaded={this.state.isLoaded}\n        titles={this.state.movies[this.state.year]}\n      />\n    );\n  }\n\n  render() {\n    return(\n      <div>\n        <form>\n          <select value={this.state.year} onChange={this.handleChange}>\n            <option value=\"2019\">2019</option>\n            <option value=\"2018\">2018</option>\n          </select>\n        </form>\n        <div>\n          {this.renderMovie()}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n// ========================================\n\nReactDOM.render(\n  <Ajax />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}