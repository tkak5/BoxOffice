{"ast":null,"code":"var _jsxFileName = \"/Users/tkak/sample/react2/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"../data/2019.json\").then(function (response) {\n      if (response.ok) {\n        response.json().then(function (json) {\n          this.setState({\n            isLoaded: true,\n            movies: json[2019]\n          });\n        });\n      } else {\n        this.setState({\n          isLoaded: true,\n          error: response\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      movies\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, movies.map(movie => React.createElement(\"li\", {\n        key: movie.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, movie.title, \" \", movie.worldwide)));\n    }\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(MyComponent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tkak/sample/react2/my-app/src/index.js"],"names":["React","ReactDOM","MyComponent","Component","constructor","props","state","error","isLoaded","movies","componentDidMount","fetch","then","response","ok","json","setState","render","message","map","movie","title","worldwide","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mBAAD,CAAL,CAA2BC,IAA3B,CAAgC,UAASC,QAAT,EAAmB;AACjD,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACdD,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAASG,IAAT,EAAe;AAClC,eAAKC,QAAL,CAAc;AACZR,YAAAA,QAAQ,EAAE,IADE;AAEZC,YAAAA,MAAM,EAAEM,IAAI,CAAC,IAAD;AAFA,WAAd;AAID,SALD;AAMD,OAPD,MAOO;AACL,aAAKC,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAAEM;AAFK,SAAd;AAID;AACF,KAdD;AAeD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA8B,KAAKH,KAAzC;;AACA,QAAIC,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACW,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,MAAM,CAACU,GAAP,CAAWC,KAAK,IACf;AAAI,QAAA,GAAG,EAAEA,KAAK,CAACC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACC,KADT,OACiBD,KAAK,CAACE,SADvB,CADD,CADH,CADF;AASD;AACF;;AA7CuC,C,CA+C1C;;;AAEArB,QAAQ,CAACgB,MAAT,CACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"../data/2019.json\").then(function(response) {\n      if(response.ok) {\n        response.json().then(function(json) {\n          this.setState({\n            isLoaded: true,\n            movies: json[2019]\n          });\n        });\n      } else {\n        this.setState({\n          isLoaded: true,\n          error: response\n        });\n      }\n    });\n  }\n\n  render() {\n    const { error, isLoaded, movies } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.title}>\n              {movie.title} {movie.worldwide}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n// ========================================\n\nReactDOM.render(\n  <MyComponent />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}