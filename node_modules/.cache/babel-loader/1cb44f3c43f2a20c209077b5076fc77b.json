{"ast":null,"code":"var _jsxFileName = \"/Users/tkak/sample/react2/my-app/src/sort.js\";\nimport React, { useState, useMemo } from 'react';\nimport Movie from './index';\nimport Button from './button';\nimport Filter from './filter';\nimport Select from './select';\n\nconst Sort = props => {\n  const [sort, setSort] = useState([]);\n  const [filterQuery, setFilterQuery] = useState({});\n  const [year, setYear] = useState([2015]);\n  const sortedMovies = useMemo(() => {\n    let _sortedMovies = props.movies[year]; //入力した文字は小文字にする\n\n    const filterTitle = filterQuery.title && filterQuery.title.toLowerCase(); //絞り込み検索\n\n    _sortedMovies = _sortedMovies.filter(row => {\n      //タイトルで絞り込み\n      if (filterQuery.title && String(row.title).toLowerCase().indexOf(filterTitle) === -1) {\n        return false;\n      }\n\n      return row;\n    }); //ソート\n\n    if (sort.key) {\n      _sortedMovies = _sortedMovies.sort((a, b) => {\n        a = a[sort.key];\n        b = b[sort.key];\n\n        if (a === b) {\n          return 0;\n        }\n\n        if (a > b) {\n          return 1 * sort.order;\n        }\n\n        if (a < b) {\n          return -1 * sort.order;\n        }\n      });\n    }\n\n    return _sortedMovies;\n  }, [filterQuery, sort]);\n\n  const handleFilter = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilterQuery({ ...filterQuery,\n      [name]: value\n    });\n  };\n\n  const handleSort = key => {\n    if (sort.key === key) {\n      setSort({ ...sort,\n        order: -sort.order\n      });\n    } else {\n      setSort({\n        key: key,\n        order: 1\n      });\n    }\n  };\n\n  const handleChange = event => {\n    setYear({\n      year: event.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Select, {\n    year: year,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Button, {\n    button: \"income\",\n    sort: sort,\n    handleSort: handleSort,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    handleFilter: handleFilter,\n    filterQuery: filterQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Movie, {\n    movies: sortedMovies,\n    max: props.movies.year.max,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })));\n};\n\nexport default Sort;","map":{"version":3,"sources":["/Users/tkak/sample/react2/my-app/src/sort.js"],"names":["React","useState","useMemo","Movie","Button","Filter","Select","Sort","props","sort","setSort","filterQuery","setFilterQuery","year","setYear","sortedMovies","_sortedMovies","movies","filterTitle","title","toLowerCase","filter","row","String","indexOf","key","a","b","order","handleFilter","e","name","value","target","handleSort","handleChange","event","max"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport Movie from './index';\nimport Button from './button';\nimport Filter from './filter';\nimport Select from './select';\n\n\nconst Sort = (props) => {\n  const [sort, setSort] = useState([])\n  const [filterQuery, setFilterQuery] = useState({});\n  const [year, setYear] = useState([2015]);\n\n  const sortedMovies = useMemo(() => {\n    let _sortedMovies = props.movies[year];\n\n    //入力した文字は小文字にする\n    const filterTitle = filterQuery.title && filterQuery.title.toLowerCase();\n\n    //絞り込み検索\n    _sortedMovies = _sortedMovies.filter(row => {\n      //タイトルで絞り込み\n      if (\n        filterQuery.title &&\n        String(row.title).toLowerCase().indexOf(filterTitle) === -1\n      ) {\n        return false;\n      }\n      return row;\n    });\n\n    //ソート\n    if (sort.key) {\n      _sortedMovies = _sortedMovies.sort((a, b) => {\n        a = a[sort.key];\n        b = b[sort.key];\n\n        if(a === b) {\n          return 0;\n        }\n        if(a > b) {\n          return 1 * sort.order;\n        }\n        if(a < b) {\n          return -1 * sort.order;\n        }\n      });\n    }\n    return _sortedMovies;\n  }, [filterQuery, sort ]);\n\n  const handleFilter = e => {\n    const { name, value } = e.target;\n    setFilterQuery({...filterQuery, [name]: value });\n  };\n\n  const handleSort = (key) => {\n    if (sort.key === key) {\n      setSort({...sort, order: -sort.order });\n    } else {\n      setSort({\n        key: key,\n        order: 1\n      })\n    }\n  };\n\n  const handleChange = (event) => {\n    setYear({year: event.target.value});\n  }\n\n   return(\n    <div>\n      <div>\n        <Select\n          year={year}\n          handleChange={handleChange}\n        />\n      </div>\n      <div>\n        <Button\n          button={\"income\"}\n          sort={sort}\n          handleSort={handleSort}\n        />\n      </div>\n      <div>\n        <Filter\n          handleFilter={handleFilter}\n          filterQuery={filterQuery}\n        />\n      </div>\n      <div>\n        <Movie\n          movies={sortedMovies}\n          max={props.movies.year.max}\n        />\n      </div>\n    </div>\n\n   );\n}\n\nexport default Sort;\n\n"]},"metadata":{},"sourceType":"module"}