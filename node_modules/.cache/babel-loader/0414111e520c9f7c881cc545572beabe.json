{"ast":null,"code":"import React, { useState, useMemo } from 'react';\nimport Movie from './index';\nimport Button from './button';\n/*\nconst Sort = (props) => {\n  const [sort, setSort] = useState([])\n\n  const KEYS = [\"rank\", \"title\", \"income\"];\n\n  const sortedMovies = useMemo(() => {\n    let _sortedMovies = props.movies[\"movies\"];\n    if (sort.key) {\n      _sortedMovies = _sortedMovies.sort((a,b) => {\n        a = a[sort.key];\n        b = b[sort.key];\n\n        if (a===b) {\n          return 0;\n        }\n        if (a > b) {\n          return 1 * sort.order;\n        }\n        if (a < b) {\n          return -1 * sort.order;\n        }\n      });\n    }\n    return _sortedMovies;\n  }, [sort]);\n\n  const handleSort = (key) => {\n    if (sort.key === key) {\n      setSort({...sort, order: -sort.order });\n    } else {\n      setSort({\n        key: key,\n        order: 1\n      })\n    }\n  };\n\n   return(\n    <div>\n      <div>\n        {KEYS.map((key, index) => (\n          <Button\n            key={index}\n            button={key}\n            sort={sort}\n            handleSort={handleSort}\n          />\n        ))\n        }\n      </div>\n      <div>\n        <Movie\n          error={props.error}\n          isLoaded={props.isLoaded}\n          movies={sortedMovies}\n          max={props.movies[\"max\"]}\n        />\n      </div>\n    </div>\n\n   );\n}\n\nexport default Sort;\n*/","map":{"version":3,"sources":["/Users/tkak/sample/react2/my-app/src/sort.js"],"names":["React","useState","useMemo","Movie","Button"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport Movie from './index';\nimport Button from './button';\n\n/*\nconst Sort = (props) => {\n  const [sort, setSort] = useState([])\n\n  const KEYS = [\"rank\", \"title\", \"income\"];\n\n  const sortedMovies = useMemo(() => {\n    let _sortedMovies = props.movies[\"movies\"];\n    if (sort.key) {\n      _sortedMovies = _sortedMovies.sort((a,b) => {\n        a = a[sort.key];\n        b = b[sort.key];\n\n        if (a===b) {\n          return 0;\n        }\n        if (a > b) {\n          return 1 * sort.order;\n        }\n        if (a < b) {\n          return -1 * sort.order;\n        }\n      });\n    }\n    return _sortedMovies;\n  }, [sort]);\n\n  const handleSort = (key) => {\n    if (sort.key === key) {\n      setSort({...sort, order: -sort.order });\n    } else {\n      setSort({\n        key: key,\n        order: 1\n      })\n    }\n  };\n\n   return(\n    <div>\n      <div>\n        {KEYS.map((key, index) => (\n          <Button\n            key={index}\n            button={key}\n            sort={sort}\n            handleSort={handleSort}\n          />\n        ))\n        }\n      </div>\n      <div>\n        <Movie\n          error={props.error}\n          isLoaded={props.isLoaded}\n          movies={sortedMovies}\n          max={props.movies[\"max\"]}\n        />\n      </div>\n    </div>\n\n   );\n}\n\nexport default Sort;\n*/\n"]},"metadata":{},"sourceType":"module"}