{"ast":null,"code":"var _jsxFileName = \"/Users/tkak/sample/react2/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nclass Css extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass Movie extends React.Component {\n  render() {\n    return React.createElement(\"li\", {\n      id: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.props.name, \" \", this.props.money);\n  }\n\n}\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://tkak5.github.io/movie/data/2019.json\").then(response => {\n      if (response.ok) {\n        response.json().then(json => this.setState({\n          isLoaded: true,\n          movies: json[2019]\n        }));\n      } else {\n        this.setState({\n          isLoaded: true,\n          error: response\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      movies\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, movies.map(movie => React.createElement(Movie, {\n        name: movie.title,\n        money: movie.worldwide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(MyComponent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tkak/sample/react2/my-app/src/index.js"],"names":["React","ReactDOM","styled","Css","Component","render","Movie","props","name","money","MyComponent","constructor","state","error","isLoaded","movies","componentDidMount","fetch","then","response","ok","json","setState","message","map","movie","title","worldwide","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAL+B;;AAQlC,MAAMC,KAAN,SAAoBN,KAAK,CAACI,SAA1B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAI,MAAA,EAAE,EAAE,KAAKE,KAAL,CAAWC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKD,KAAL,CAAWC,IAArC,OAA4C,KAAKD,KAAL,CAAWE,KAAvD,CADF;AAGD;;AALiC;;AAQpC,MAAMC,WAAN,SAA0BV,KAAK,CAACI,SAAhC,CAA0C;AACxCO,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKK,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACEC,IADF,CACQC,QAAD,IAAc;AAAC,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AAClCD,QAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsBG,IAAD,IACnB,KAAKC,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,MAAM,EAAEM,IAAI,CAAC,IAAD;AAFA,SAAd,CADF;AAMD,OAPmB,MAOb;AACL,aAAKC,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAAEM;AAFK,SAAd;AAID;AACF,KAdD;AAeD;;AAEDd,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEQ,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA8B,KAAKH,KAAzC;;AACA,QAAIC,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACU,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,MAAM,CAACS,GAAP,CAAWC,KAAK,IACf,oBAAC,KAAD;AACE,QAAA,IAAI,EAAEA,KAAK,CAACC,KADd;AAEE,QAAA,KAAK,EAAED,KAAK,CAACE,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAUD;AACF;;AA9CuC,C,CAgD1C;;;AAEA1B,QAAQ,CAACI,MAAT,CACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEuB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nclass Css extends React.Component {\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n\nclass Movie extends React.Component {\n  render() {\n    return (\n      <li id={this.props.name}>{this.props.name} {this.props.money}</li>\n      );\n  }\n}\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://tkak5.github.io/movie/data/2019.json\"\n    ).then((response) => {if(response.ok) {\n        response.json().then((json) =>\n          this.setState({\n            isLoaded: true,\n            movies: json[2019]\n          })\n        )\n      } else {\n        this.setState({\n          isLoaded: true,\n          error: response\n        });\n      }\n    });\n  }\n\n  render() {\n    const { error, isLoaded, movies } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {movies.map(movie => (\n            <Movie\n              name={movie.title}\n              money={movie.worldwide}\n            />\n            ))}\n        </ul>\n      );\n    }\n  }\n}\n// ========================================\n\nReactDOM.render(\n  <MyComponent />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}