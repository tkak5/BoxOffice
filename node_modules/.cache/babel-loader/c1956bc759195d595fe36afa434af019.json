{"ast":null,"code":"var _jsxFileName = \"/Users/tkak/sample/react2/my-app/src/sort.js\";\nimport React, { useState, useMemo } from 'react';\nimport Movie from './index';\nimport Button from './button';\nimport Filter from './filter';\n\nconst Sort = props => {\n  const [sort, setSort] = useState([]);\n  const [filterQuery, setFilterQuery] = useState({});\n  const sortedMovies = useMemo(() => {\n    let _sortedMovies = props.movies; //入力した文字は小文字にする\n\n    const filterTitle = finlterQuery.title && filterQuery.title.toLowerCase(); //絞り込み検索\n\n    _sortedMovies = _sortedMovies.filter(row => {\n      //タイトルで絞り込み\n      if (filterQuery.title && String(row.title).toLowerCase().indexOf(filterTitle) === -1) {\n        return false;\n      }\n\n      return row;\n    }); //ソート\n\n    if (sort.key) {\n      _sortedMovies = _sortedMovies.sort((a, b) => {\n        a = a[sort.key];\n        b = b[sort.key];\n\n        if (a === b) {\n          return 0;\n        }\n\n        if (a > b) {\n          return 1 * sort.order;\n        }\n\n        if (a < b) {\n          return -1 * sort.order;\n        }\n      });\n    }\n\n    return _sortedMovies;\n  }, [filterQuery, sort]);\n\n  const handleFilter = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilterQuery({ ...filterQuery,\n      [name]: value\n    });\n  };\n\n  const handleSort = key => {\n    if (sort.key === key) {\n      setSort({ ...sort,\n        order: -sort.order\n      });\n    } else {\n      setSort({\n        key: key,\n        order: 1\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Button, {\n    button: \"income\",\n    sort: sort,\n    handleSort: handleSort,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    handleFilter: handleFilter,\n    filterQuery: filterQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Movie, {\n    movies: props.movies,\n    max: props.max,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n};\n\nexport default Sort;","map":{"version":3,"sources":["/Users/tkak/sample/react2/my-app/src/sort.js"],"names":["React","useState","useMemo","Movie","Button","Filter","Sort","props","sort","setSort","filterQuery","setFilterQuery","sortedMovies","_sortedMovies","movies","filterTitle","finlterQuery","title","toLowerCase","filter","row","String","indexOf","key","a","b","order","handleFilter","e","name","value","target","handleSort","max"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport Movie from './index';\nimport Button from './button';\nimport Filter from './filter';\n\n\nconst Sort = (props) => {\n  const [sort, setSort] = useState([])\n  const [filterQuery, setFilterQuery] = useState({});\n\n  const sortedMovies = useMemo(() => {\n    let _sortedMovies = props.movies;\n\n    //入力した文字は小文字にする\n    const filterTitle = finlterQuery.title && filterQuery.title.toLowerCase();\n\n    //絞り込み検索\n    _sortedMovies = _sortedMovies.filter(row => {\n      //タイトルで絞り込み\n      if (\n        filterQuery.title &&\n        String(row.title).toLowerCase().indexOf(filterTitle) === -1\n      ) {\n        return false;\n      }\n      return row;\n    });\n\n    //ソート\n    if (sort.key) {\n      _sortedMovies = _sortedMovies.sort((a, b) => {\n        a = a[sort.key];\n        b = b[sort.key];\n\n        if(a === b) {\n          return 0;\n        }\n        if(a > b) {\n          return 1 * sort.order;\n        }\n        if(a < b) {\n          return -1 * sort.order;\n        }\n      });\n    }\n    return _sortedMovies;\n  }, [filterQuery, sort ]);\n\n  const handleFilter = e => {\n    const { name, value } = e.target;\n    setFilterQuery({...filterQuery, [name]: value });\n  };\n\n  const handleSort = (key) => {\n    if (sort.key === key) {\n      setSort({...sort, order: -sort.order });\n    } else {\n      setSort({\n        key: key,\n        order: 1\n      })\n    }\n  };\n\n   return(\n    <div>\n      <div>\n        <Button\n          button={\"income\"}\n          sort={sort}\n          handleSort={handleSort}\n        />\n      </div>\n      <div>\n        <Filter\n          handleFilter={handleFilter}\n          filterQuery={filterQuery}\n        />\n      </div>\n      <div>\n        <Movie\n          movies={props.movies}\n          max={props.max}\n        />\n      </div>\n    </div>\n\n   );\n}\n\nexport default Sort;\n\n"]},"metadata":{},"sourceType":"module"}